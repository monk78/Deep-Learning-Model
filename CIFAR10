{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CIFAR10","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"metadata":{"id":"tIvspgpB8hMj","colab_type":"code","outputId":"67ba95a6-6ab8-4158-b349-62e9f8aab21c","executionInfo":{"status":"ok","timestamp":1546163389782,"user_tz":-330,"elapsed":2730,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["from __future__ import print_function\n","import keras\n","from keras.datasets import cifar10\n","from keras.models import Sequential\n","from keras.layers import Dense, Dropout, Activation, Flatten\n","from keras.layers import Conv2D, Lambda, MaxPooling2D"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"}]},{"metadata":{"id":"Z7pPpGmKAKKe","colab_type":"code","outputId":"aedb35be-63dc-4f17-a382-ec6a498701c9","executionInfo":{"status":"ok","timestamp":1546163406733,"user_tz":-330,"elapsed":7724,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"cell_type":"code","source":["(x_train, y_train), (x_test, y_test) = cifar10.load_data()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Downloading data from https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz\n","170500096/170498071 [==============================] - 4s 0us/step\n"],"name":"stdout"}]},{"metadata":{"id":"x0h3APlaAKcb","colab_type":"code","outputId":"13886ab5-6b8c-4e65-df87-2dd9f05a93d9","executionInfo":{"status":"ok","timestamp":1546163415612,"user_tz":-330,"elapsed":1119,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"cell_type":"code","source":["print('x_train shape:', x_train.shape)\n","print('y_train shape:',y_train.shape)\n","print('x_test.shape:',x_test.shape)\n","print('y_test.shape:',y_test.shape)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["x_train shape: (50000, 32, 32, 3)\n","y_train shape: (50000, 1)\n","x_test.shape: (10000, 32, 32, 3)\n","y_test.shape: (10000, 1)\n"],"name":"stdout"}]},{"metadata":{"id":"Z4iNTcpBAymZ","colab_type":"code","colab":{}},"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline"],"execution_count":0,"outputs":[]},{"metadata":{"id":"iLm2mqI3Ayo4","colab_type":"code","outputId":"b74ad2d1-8b05-4b5f-d551-a7cf2839fabf","executionInfo":{"status":"ok","timestamp":1546163424357,"user_tz":-330,"elapsed":1401,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":266}},"cell_type":"code","source":["plt.imshow(x_train[4], cmap='gray')\n","plt.show()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nAAAASUVORK5CYII=\n","text/plain":["<matplotlib.figure.Figure at 0x7fdae3c8c898>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"LN8oxKb0L1H4","colab_type":"code","outputId":"5c4e2ed5-bb0d-4c7b-cf79-c623eb019ab7","executionInfo":{"status":"ok","timestamp":1546163428136,"user_tz":-330,"elapsed":1054,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["num_classes = len(np.unique(y_train))\n","print(num_classes)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["10\n"],"name":"stdout"}]},{"metadata":{"id":"m_fb2Nlhij7p","colab_type":"code","colab":{}},"cell_type":"code","source":["from keras.utils import np_utils\n","\n","Y_train = np_utils.to_categorical(y_train)\n","Y_test = np_utils.to_categorical(y_test)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"tMEb3E3TL1LQ","colab_type":"code","outputId":"9d957bc4-c01b-4964-ed09-c282bcee8946","executionInfo":{"status":"ok","timestamp":1546163765424,"user_tz":-330,"elapsed":1228,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"cell_type":"code","source":["X_train = x_train[:3600]\n","Y_train = Y_train[:3600]\n","\n","X_test = x_test[:900]\n","Y_test = Y_test[:900]\n","\n","print(X_train.shape)\n","print(X_test.shape)\n","print(Y_train.shape)\n","print(Y_test.shape)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["(3600, 32, 32, 3)\n","(900, 32, 32, 3)\n","(3600, 10)\n","(900, 10)\n"],"name":"stdout"}]},{"metadata":{"id":"FbIFFe7HiBEo","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]},{"metadata":{"id":"RDJshqO1RN4B","colab_type":"code","outputId":"36606504-fcbd-4553-a413-6427c331feb7","executionInfo":{"status":"ok","timestamp":1546163783514,"user_tz":-330,"elapsed":1592,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"cell_type":"code","source":["\n","X_train = X_train.astype('float32')\n","X_test = X_test.astype('float32')\n","X_train = X_train / 255.0\n","X_test = X_test / 255.0\n","print(X_train.shape,Y_train.shape)\n","print(X_test.shape,Y_test.shape)\n","\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["(3600, 32, 32, 3) (3600, 10)\n","(900, 32, 32, 3) (900, 10)\n"],"name":"stdout"}]},{"metadata":{"id":"2zyN---fAyrk","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]},{"metadata":{"id":"ZCDYZyC3Ayt9","colab_type":"code","outputId":"e378ed38-6b89-410c-ae3d-5079dd3ae94f","executionInfo":{"status":"ok","timestamp":1546163788986,"user_tz":-330,"elapsed":1680,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":266}},"cell_type":"code","source":["plt.imshow(x_train[3], cmap='gray')\n","plt.show()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nSQD/D9PTxNinHhRVAAAAAElFTkSuQmCC\n","text/plain":["<matplotlib.figure.Figure at 0x7fdadfe75438>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"8P5VV9erAywX","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]},{"metadata":{"id":"QNbppGbwAyzj","colab_type":"code","colab":{}},"cell_type":"code","source":["from keras.layers import Dense, Activation, Flatten, Dropout\n","from keras.layers import Convolution2D, MaxPooling2D\n","\n","from keras.models import Sequential"],"execution_count":0,"outputs":[]},{"metadata":{"id":"reqV_YInAKfz","colab_type":"code","outputId":"74d08851-8a6f-4e9f-8b0f-f7772cd8daf9","executionInfo":{"status":"ok","timestamp":1546163796691,"user_tz":-330,"elapsed":1377,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":748}},"cell_type":"code","source":["model=Sequential()\n","model.add(Conv2D(32, (3, 3),\n","                 input_shape=X_train.shape[1:]))\n","model.add(Activation('relu'))\n","model.add(Conv2D(32, (3, 3)))\n","model.add(Activation('relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Dropout(0.25))\n","\n","model.add(Conv2D(64, (3, 3), padding='same'))\n","model.add(Activation('relu'))\n","model.add(Conv2D(64, (3, 3)))\n","model.add(Activation('relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Dropout(0.25))\n","\n","model.add(Flatten())\n","model.add(Dense(512))\n","model.add(Activation('relu'))\n","model.add(Dropout(0.5))\n","model.add(Dense(num_classes))\n","model.add(Activation('softmax'))\n","model.summary()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d_5 (Conv2D)            (None, 30, 30, 32)        896       \n","_________________________________________________________________\n","activation_7 (Activation)    (None, 30, 30, 32)        0         \n","_________________________________________________________________\n","conv2d_6 (Conv2D)            (None, 28, 28, 32)        9248      \n","_________________________________________________________________\n","activation_8 (Activation)    (None, 28, 28, 32)        0         \n","_________________________________________________________________\n","max_pooling2d_3 (MaxPooling2 (None, 14, 14, 32)        0         \n","_________________________________________________________________\n","dropout_4 (Dropout)          (None, 14, 14, 32)        0         \n","_________________________________________________________________\n","conv2d_7 (Conv2D)            (None, 14, 14, 64)        18496     \n","_________________________________________________________________\n","activation_9 (Activation)    (None, 14, 14, 64)        0         \n","_________________________________________________________________\n","conv2d_8 (Conv2D)            (None, 12, 12, 64)        36928     \n","_________________________________________________________________\n","activation_10 (Activation)   (None, 12, 12, 64)        0         \n","_________________________________________________________________\n","max_pooling2d_4 (MaxPooling2 (None, 6, 6, 64)          0         \n","_________________________________________________________________\n","dropout_5 (Dropout)          (None, 6, 6, 64)          0         \n","_________________________________________________________________\n","flatten_2 (Flatten)          (None, 2304)              0         \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 512)               1180160   \n","_________________________________________________________________\n","activation_11 (Activation)   (None, 512)               0         \n","_________________________________________________________________\n","dropout_6 (Dropout)          (None, 512)               0         \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 10)                5130      \n","_________________________________________________________________\n","activation_12 (Activation)   (None, 10)                0         \n","=================================================================\n","Total params: 1,250,858\n","Trainable params: 1,250,858\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"metadata":{"id":"CKjVv3xuLAVE","colab_type":"code","colab":{}},"cell_type":"code","source":["model.compile(loss='categorical_crossentropy', \n","              optimizer='adam', metrics=['accuracy'])"],"execution_count":0,"outputs":[]},{"metadata":{"id":"ZRrnqBR2LAXh","colab_type":"code","outputId":"51ebcc35-9cd9-40a0-d723-97fdf3d62a93","executionInfo":{"status":"ok","timestamp":1546163891086,"user_tz":-330,"elapsed":59606,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":3485}},"cell_type":"code","source":["model.fit(X_train, Y_train, \n","          validation_data=(X_test, Y_test),\n","         nb_epoch=100,\n","         batch_size=256,\n","         verbose=2)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:5: UserWarning: The `nb_epoch` argument in `fit` has been renamed `epochs`.\n","  \"\"\"\n"],"name":"stderr"},{"output_type":"stream","text":["Train on 3600 samples, validate on 900 samples\n","Epoch 1/100\n"," - 1s - loss: 1.3546 - acc: 0.5114 - val_loss: 1.4572 - val_acc: 0.4889\n","Epoch 2/100\n"," - 1s - loss: 1.3094 - acc: 0.5272 - val_loss: 1.4045 - val_acc: 0.4956\n","Epoch 3/100\n"," - 1s - loss: 1.2441 - acc: 0.5508 - val_loss: 1.3708 - val_acc: 0.5111\n","Epoch 4/100\n"," - 1s - loss: 1.2115 - acc: 0.5575 - val_loss: 1.3505 - val_acc: 0.5178\n","Epoch 5/100\n"," - 1s - loss: 1.1806 - acc: 0.5694 - val_loss: 1.3597 - val_acc: 0.5244\n","Epoch 6/100\n"," - 1s - loss: 1.1508 - acc: 0.5853 - val_loss: 1.3984 - val_acc: 0.4856\n","Epoch 7/100\n"," - 1s - loss: 1.1225 - acc: 0.6006 - val_loss: 1.3394 - val_acc: 0.5411\n","Epoch 8/100\n"," - 1s - loss: 1.1187 - acc: 0.5975 - val_loss: 1.3117 - val_acc: 0.5444\n","Epoch 9/100\n"," - 1s - loss: 1.0653 - acc: 0.6231 - val_loss: 1.3598 - val_acc: 0.5367\n","Epoch 10/100\n"," - 1s - loss: 1.0200 - acc: 0.6317 - val_loss: 1.3458 - val_acc: 0.5378\n","Epoch 11/100\n"," - 1s - loss: 0.9853 - acc: 0.6489 - val_loss: 1.3522 - val_acc: 0.5322\n","Epoch 12/100\n"," - 1s - loss: 0.9679 - acc: 0.6508 - val_loss: 1.3186 - val_acc: 0.5378\n","Epoch 13/100\n"," - 1s - loss: 0.9167 - acc: 0.6761 - val_loss: 1.3405 - val_acc: 0.5478\n","Epoch 14/100\n"," - 1s - loss: 0.8768 - acc: 0.6878 - val_loss: 1.3400 - val_acc: 0.5544\n","Epoch 15/100\n"," - 1s - loss: 0.8663 - acc: 0.6928 - val_loss: 1.3462 - val_acc: 0.5567\n","Epoch 16/100\n"," - 1s - loss: 0.8200 - acc: 0.7078 - val_loss: 1.3351 - val_acc: 0.5656\n","Epoch 17/100\n"," - 1s - loss: 0.7626 - acc: 0.7261 - val_loss: 1.4256 - val_acc: 0.5511\n","Epoch 18/100\n"," - 1s - loss: 0.7671 - acc: 0.7244 - val_loss: 1.3638 - val_acc: 0.5533\n","Epoch 19/100\n"," - 1s - loss: 0.7062 - acc: 0.7436 - val_loss: 1.3549 - val_acc: 0.5644\n","Epoch 20/100\n"," - 1s - loss: 0.6516 - acc: 0.7722 - val_loss: 1.3943 - val_acc: 0.5767\n","Epoch 21/100\n"," - 1s - loss: 0.6449 - acc: 0.7722 - val_loss: 1.4075 - val_acc: 0.5700\n","Epoch 22/100\n"," - 1s - loss: 0.6027 - acc: 0.7897 - val_loss: 1.5444 - val_acc: 0.5367\n","Epoch 23/100\n"," - 1s - loss: 0.5934 - acc: 0.7936 - val_loss: 1.3995 - val_acc: 0.5656\n","Epoch 24/100\n"," - 1s - loss: 0.5687 - acc: 0.7969 - val_loss: 1.5139 - val_acc: 0.5511\n","Epoch 25/100\n"," - 1s - loss: 0.5635 - acc: 0.7942 - val_loss: 1.4025 - val_acc: 0.5644\n","Epoch 26/100\n"," - 1s - loss: 0.5096 - acc: 0.8253 - val_loss: 1.4838 - val_acc: 0.5722\n","Epoch 27/100\n"," - 1s - loss: 0.4460 - acc: 0.8439 - val_loss: 1.5955 - val_acc: 0.5544\n","Epoch 28/100\n"," - 1s - loss: 0.4398 - acc: 0.8428 - val_loss: 1.5471 - val_acc: 0.5689\n","Epoch 29/100\n"," - 1s - loss: 0.4232 - acc: 0.8481 - val_loss: 1.5712 - val_acc: 0.5711\n","Epoch 30/100\n"," - 1s - loss: 0.4082 - acc: 0.8544 - val_loss: 1.6875 - val_acc: 0.5500\n","Epoch 31/100\n"," - 1s - loss: 0.3868 - acc: 0.8667 - val_loss: 1.5660 - val_acc: 0.5767\n","Epoch 32/100\n"," - 1s - loss: 0.3521 - acc: 0.8722 - val_loss: 1.5857 - val_acc: 0.5744\n","Epoch 33/100\n"," - 1s - loss: 0.3246 - acc: 0.8806 - val_loss: 1.6228 - val_acc: 0.5700\n","Epoch 34/100\n"," - 1s - loss: 0.2863 - acc: 0.8992 - val_loss: 1.7366 - val_acc: 0.5678\n","Epoch 35/100\n"," - 1s - loss: 0.3185 - acc: 0.8892 - val_loss: 1.7821 - val_acc: 0.5411\n","Epoch 36/100\n"," - 1s - loss: 0.3802 - acc: 0.8703 - val_loss: 1.6487 - val_acc: 0.5667\n","Epoch 37/100\n"," - 1s - loss: 0.3098 - acc: 0.8978 - val_loss: 1.6163 - val_acc: 0.5711\n","Epoch 38/100\n"," - 1s - loss: 0.2636 - acc: 0.9100 - val_loss: 1.7177 - val_acc: 0.5933\n","Epoch 39/100\n"," - 1s - loss: 0.2251 - acc: 0.9239 - val_loss: 1.7469 - val_acc: 0.5767\n","Epoch 40/100\n"," - 1s - loss: 0.2106 - acc: 0.9256 - val_loss: 1.7818 - val_acc: 0.5689\n","Epoch 41/100\n"," - 1s - loss: 0.2009 - acc: 0.9383 - val_loss: 1.9203 - val_acc: 0.5500\n","Epoch 42/100\n"," - 1s - loss: 0.2606 - acc: 0.9103 - val_loss: 1.7673 - val_acc: 0.5633\n","Epoch 43/100\n"," - 1s - loss: 0.2567 - acc: 0.9083 - val_loss: 1.6997 - val_acc: 0.5833\n","Epoch 44/100\n"," - 1s - loss: 0.2134 - acc: 0.9281 - val_loss: 1.7661 - val_acc: 0.5867\n","Epoch 45/100\n"," - 1s - loss: 0.1876 - acc: 0.9422 - val_loss: 1.8155 - val_acc: 0.5722\n","Epoch 46/100\n"," - 1s - loss: 0.1652 - acc: 0.9453 - val_loss: 2.0082 - val_acc: 0.5622\n","Epoch 47/100\n"," - 1s - loss: 0.2055 - acc: 0.9261 - val_loss: 1.9046 - val_acc: 0.5489\n","Epoch 48/100\n"," - 1s - loss: 0.1732 - acc: 0.9431 - val_loss: 1.9243 - val_acc: 0.5689\n","Epoch 49/100\n"," - 1s - loss: 0.1735 - acc: 0.9389 - val_loss: 1.9489 - val_acc: 0.5900\n","Epoch 50/100\n"," - 1s - loss: 0.1724 - acc: 0.9411 - val_loss: 1.8773 - val_acc: 0.5633\n","Epoch 51/100\n"," - 1s - loss: 0.1473 - acc: 0.9500 - val_loss: 1.9101 - val_acc: 0.5800\n","Epoch 52/100\n"," - 1s - loss: 0.1538 - acc: 0.9508 - val_loss: 1.9140 - val_acc: 0.5744\n","Epoch 53/100\n"," - 1s - loss: 0.1127 - acc: 0.9614 - val_loss: 2.0113 - val_acc: 0.5711\n","Epoch 54/100\n"," - 1s - loss: 0.1241 - acc: 0.9581 - val_loss: 2.1032 - val_acc: 0.5367\n","Epoch 55/100\n"," - 1s - loss: 0.1282 - acc: 0.9625 - val_loss: 1.9798 - val_acc: 0.5744\n","Epoch 56/100\n"," - 1s - loss: 0.1131 - acc: 0.9611 - val_loss: 2.0036 - val_acc: 0.5533\n","Epoch 57/100\n"," - 1s - loss: 0.1498 - acc: 0.9489 - val_loss: 2.0869 - val_acc: 0.5844\n","Epoch 58/100\n"," - 1s - loss: 0.1244 - acc: 0.9597 - val_loss: 2.0612 - val_acc: 0.5744\n","Epoch 59/100\n"," - 1s - loss: 0.1388 - acc: 0.9511 - val_loss: 1.9644 - val_acc: 0.5744\n","Epoch 60/100\n"," - 1s - loss: 0.1169 - acc: 0.9600 - val_loss: 2.1272 - val_acc: 0.5756\n","Epoch 61/100\n"," - 1s - loss: 0.1256 - acc: 0.9531 - val_loss: 2.1165 - val_acc: 0.5544\n","Epoch 62/100\n"," - 1s - loss: 0.1502 - acc: 0.9456 - val_loss: 2.0040 - val_acc: 0.5800\n","Epoch 63/100\n"," - 1s - loss: 0.1286 - acc: 0.9578 - val_loss: 2.0674 - val_acc: 0.5667\n","Epoch 64/100\n"," - 1s - loss: 0.1208 - acc: 0.9583 - val_loss: 2.0742 - val_acc: 0.5489\n","Epoch 65/100\n"," - 1s - loss: 0.1199 - acc: 0.9561 - val_loss: 2.0619 - val_acc: 0.5656\n","Epoch 66/100\n"," - 1s - loss: 0.0990 - acc: 0.9667 - val_loss: 2.0881 - val_acc: 0.5678\n","Epoch 67/100\n"," - 1s - loss: 0.0872 - acc: 0.9722 - val_loss: 2.2292 - val_acc: 0.5700\n","Epoch 68/100\n"," - 1s - loss: 0.1406 - acc: 0.9508 - val_loss: 2.1840 - val_acc: 0.5667\n","Epoch 69/100\n"," - 1s - loss: 0.1115 - acc: 0.9592 - val_loss: 2.1113 - val_acc: 0.5833\n","Epoch 70/100\n"," - 1s - loss: 0.0923 - acc: 0.9686 - val_loss: 2.1180 - val_acc: 0.5800\n","Epoch 71/100\n"," - 1s - loss: 0.0707 - acc: 0.9750 - val_loss: 2.2066 - val_acc: 0.5722\n","Epoch 72/100\n"," - 1s - loss: 0.0806 - acc: 0.9747 - val_loss: 2.1825 - val_acc: 0.5689\n","Epoch 73/100\n"," - 1s - loss: 0.1043 - acc: 0.9664 - val_loss: 2.1296 - val_acc: 0.5744\n","Epoch 74/100\n"," - 1s - loss: 0.1062 - acc: 0.9636 - val_loss: 2.2141 - val_acc: 0.5556\n","Epoch 75/100\n"," - 1s - loss: 0.0836 - acc: 0.9731 - val_loss: 2.1342 - val_acc: 0.5833\n","Epoch 76/100\n"," - 1s - loss: 0.0652 - acc: 0.9772 - val_loss: 2.2440 - val_acc: 0.5811\n","Epoch 77/100\n"," - 1s - loss: 0.0698 - acc: 0.9753 - val_loss: 2.2014 - val_acc: 0.5756\n","Epoch 78/100\n"," - 1s - loss: 0.0692 - acc: 0.9772 - val_loss: 2.2849 - val_acc: 0.5867\n","Epoch 79/100\n"," - 1s - loss: 0.0686 - acc: 0.9753 - val_loss: 2.2456 - val_acc: 0.5767\n","Epoch 80/100\n"," - 1s - loss: 0.0679 - acc: 0.9792 - val_loss: 2.3715 - val_acc: 0.5567\n","Epoch 81/100\n"," - 1s - loss: 0.0654 - acc: 0.9761 - val_loss: 2.3235 - val_acc: 0.5833\n","Epoch 82/100\n"," - 1s - loss: 0.0702 - acc: 0.9764 - val_loss: 2.2822 - val_acc: 0.5656\n","Epoch 83/100\n"," - 1s - loss: 0.0756 - acc: 0.9758 - val_loss: 2.2702 - val_acc: 0.5467\n","Epoch 84/100\n"," - 1s - loss: 0.1250 - acc: 0.9581 - val_loss: 2.1889 - val_acc: 0.5556\n","Epoch 85/100\n"," - 1s - loss: 0.1635 - acc: 0.9444 - val_loss: 2.0404 - val_acc: 0.5544\n","Epoch 86/100\n"," - 1s - loss: 0.1049 - acc: 0.9622 - val_loss: 2.0335 - val_acc: 0.5844\n","Epoch 87/100\n"," - 1s - loss: 0.0973 - acc: 0.9697 - val_loss: 2.1892 - val_acc: 0.5667\n","Epoch 88/100\n"," - 1s - loss: 0.1285 - acc: 0.9564 - val_loss: 2.1534 - val_acc: 0.5767\n","Epoch 89/100\n"," - 1s - loss: 0.0871 - acc: 0.9694 - val_loss: 2.0432 - val_acc: 0.5822\n","Epoch 90/100\n"," - 1s - loss: 0.0673 - acc: 0.9781 - val_loss: 2.1348 - val_acc: 0.5711\n","Epoch 91/100\n"," - 1s - loss: 0.0917 - acc: 0.9708 - val_loss: 2.1014 - val_acc: 0.5722\n","Epoch 92/100\n"," - 1s - loss: 0.1032 - acc: 0.9653 - val_loss: 2.1640 - val_acc: 0.5733\n","Epoch 93/100\n"," - 1s - loss: 0.0829 - acc: 0.9728 - val_loss: 2.2400 - val_acc: 0.5789\n","Epoch 94/100\n"," - 1s - loss: 0.0619 - acc: 0.9781 - val_loss: 2.2879 - val_acc: 0.5733\n","Epoch 95/100\n"," - 1s - loss: 0.0684 - acc: 0.9772 - val_loss: 2.2693 - val_acc: 0.5789\n","Epoch 96/100\n"," - 1s - loss: 0.0662 - acc: 0.9783 - val_loss: 2.2901 - val_acc: 0.5656\n","Epoch 97/100\n"," - 1s - loss: 0.0692 - acc: 0.9781 - val_loss: 2.2377 - val_acc: 0.5789\n","Epoch 98/100\n"," - 1s - loss: 0.0557 - acc: 0.9822 - val_loss: 2.2354 - val_acc: 0.5733\n","Epoch 99/100\n"," - 1s - loss: 0.0538 - acc: 0.9844 - val_loss: 2.3789 - val_acc: 0.5678\n","Epoch 100/100\n"," - 1s - loss: 0.0845 - acc: 0.9722 - val_loss: 2.2747 - val_acc: 0.5722\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fdadf8c1cf8>"]},"metadata":{"tags":[]},"execution_count":27}]},{"metadata":{"id":"zc3bmjcNLAZ7","colab_type":"code","outputId":"5e3388f6-135c-4353-eb8f-06d7afa7a9e5","executionInfo":{"status":"ok","timestamp":1546107741881,"user_tz":-330,"elapsed":1241,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(32, 32, 3)"]},"metadata":{"tags":[]},"execution_count":16}]},{"metadata":{"id":"GADE0A-wLAck","colab_type":"code","outputId":"f39044a6-63e5-4a0d-a0fd-a3aaf5183a72","executionInfo":{"status":"ok","timestamp":1546109935355,"user_tz":-330,"elapsed":1682,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":799}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[{"output_type":"stream","text":["_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d_45 (Conv2D)           (None, 32, 32, 32)        896       \n","_________________________________________________________________\n","dropout_30 (Dropout)         (None, 32, 32, 32)        0         \n","_________________________________________________________________\n","conv2d_46 (Conv2D)           (None, 32, 32, 32)        9248      \n","_________________________________________________________________\n","max_pooling2d_22 (MaxPooling (None, 16, 16, 32)        0         \n","_________________________________________________________________\n","conv2d_47 (Conv2D)           (None, 16, 16, 64)        18496     \n","_________________________________________________________________\n","dropout_31 (Dropout)         (None, 16, 16, 64)        0         \n","_________________________________________________________________\n","conv2d_48 (Conv2D)           (None, 16, 16, 64)        36928     \n","_________________________________________________________________\n","max_pooling2d_23 (MaxPooling (None, 8, 8, 64)          0         \n","_________________________________________________________________\n","conv2d_49 (Conv2D)           (None, 8, 8, 128)         73856     \n","_________________________________________________________________\n","dropout_32 (Dropout)         (None, 8, 8, 128)         0         \n","_________________________________________________________________\n","conv2d_50 (Conv2D)           (None, 8, 8, 128)         147584    \n","_________________________________________________________________\n","max_pooling2d_24 (MaxPooling (None, 4, 4, 128)         0         \n","_________________________________________________________________\n","flatten_11 (Flatten)         (None, 2048)              0         \n","_________________________________________________________________\n","dropout_33 (Dropout)         (None, 2048)              0         \n","_________________________________________________________________\n","dense_19 (Dense)             (None, 1024)              2098176   \n","_________________________________________________________________\n","dropout_34 (Dropout)         (None, 1024)              0         \n","_________________________________________________________________\n","dense_20 (Dense)             (None, 512)               524800    \n","_________________________________________________________________\n","dropout_35 (Dropout)         (None, 512)               0         \n","_________________________________________________________________\n","dense_21 (Dense)             (None, 10)                5130      \n","=================================================================\n","Total params: 2,915,114\n","Trainable params: 2,915,114\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n"],"name":"stdout"}]},{"metadata":{"id":"-UETD3yYLAf0","colab_type":"code","outputId":"b28ee808-b4d8-4394-a8b8-73fb596059ea","executionInfo":{"status":"error","timestamp":1546110150961,"user_tz":-330,"elapsed":47750,"user":{"displayName":"Varun Pandey","photoUrl":"","userId":"00254569025094859131"}},"colab":{"base_uri":"https://localhost:8080/","height":1441}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[{"output_type":"stream","text":["Train on 3600 samples, validate on 900 samples\n","Epoch 1/25\n","3600/3600 [==============================] - 2s 538us/step - loss: 2.3022 - acc: 0.1078 - val_loss: 2.3020 - val_acc: 0.1022\n","Epoch 2/25\n","3600/3600 [==============================] - 2s 524us/step - loss: 2.3018 - acc: 0.1078 - val_loss: 2.3021 - val_acc: 0.1022\n","Epoch 3/25\n","3600/3600 [==============================] - 2s 518us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3022 - val_acc: 0.1022\n","Epoch 4/25\n","3600/3600 [==============================] - 2s 517us/step - loss: 2.3021 - acc: 0.1078 - val_loss: 2.3021 - val_acc: 0.1022\n","Epoch 5/25\n","3600/3600 [==============================] - 2s 513us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3020 - val_acc: 0.1022\n","Epoch 6/25\n","3600/3600 [==============================] - 2s 516us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3020 - val_acc: 0.1022\n","Epoch 7/25\n","3600/3600 [==============================] - 2s 512us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3019 - val_acc: 0.1022\n","Epoch 8/25\n","3600/3600 [==============================] - 2s 514us/step - loss: 2.3019 - acc: 0.1078 - val_loss: 2.3019 - val_acc: 0.1022\n","Epoch 9/25\n","3600/3600 [==============================] - 2s 516us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3018 - val_acc: 0.1022\n","Epoch 10/25\n","3600/3600 [==============================] - 2s 517us/step - loss: 2.3021 - acc: 0.1078 - val_loss: 2.3019 - val_acc: 0.1022\n","Epoch 11/25\n","3600/3600 [==============================] - 2s 523us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3020 - val_acc: 0.1022\n","Epoch 12/25\n","3600/3600 [==============================] - 2s 526us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3020 - val_acc: 0.1022\n","Epoch 13/25\n","3600/3600 [==============================] - 2s 518us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3020 - val_acc: 0.1022\n","Epoch 14/25\n","3600/3600 [==============================] - 2s 520us/step - loss: 2.3019 - acc: 0.1078 - val_loss: 2.3018 - val_acc: 0.1022\n","Epoch 15/25\n","3600/3600 [==============================] - 2s 525us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3019 - val_acc: 0.1022\n","Epoch 16/25\n","3600/3600 [==============================] - 2s 522us/step - loss: 2.3019 - acc: 0.1078 - val_loss: 2.3019 - val_acc: 0.1022\n","Epoch 17/25\n","3600/3600 [==============================] - 2s 525us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3021 - val_acc: 0.1022\n","Epoch 18/25\n","3600/3600 [==============================] - 2s 525us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3020 - val_acc: 0.1022\n","Epoch 19/25\n","3600/3600 [==============================] - 2s 516us/step - loss: 2.3019 - acc: 0.1078 - val_loss: 2.3022 - val_acc: 0.1022\n","Epoch 20/25\n","3600/3600 [==============================] - 2s 523us/step - loss: 2.3019 - acc: 0.1078 - val_loss: 2.3021 - val_acc: 0.1022\n","Epoch 21/25\n","3600/3600 [==============================] - 2s 521us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3021 - val_acc: 0.1022\n","Epoch 22/25\n","3600/3600 [==============================] - 2s 521us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3021 - val_acc: 0.1022\n","Epoch 23/25\n","3600/3600 [==============================] - 2s 519us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3020 - val_acc: 0.1022\n","Epoch 24/25\n","3600/3600 [==============================] - 2s 524us/step - loss: 2.3019 - acc: 0.1078 - val_loss: 2.3021 - val_acc: 0.1022\n","Epoch 25/25\n","3600/3600 [==============================] - 2s 512us/step - loss: 2.3020 - acc: 0.1078 - val_loss: 2.3019 - val_acc: 0.1022\n"],"name":"stdout"},{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-101-46a2aa9eba8d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mepochs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m64\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# Final evaluation of the model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mscores\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mevaluate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mevaluate\u001b[0;34m(self, x, y, batch_size, verbose, sample_weight, steps)\u001b[0m\n\u001b[1;32m   1100\u001b[0m             \u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1101\u001b[0m             \u001b[0msample_weight\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msample_weight\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1102\u001b[0;31m             batch_size=batch_size)\n\u001b[0m\u001b[1;32m   1103\u001b[0m         \u001b[0;31m# Prepare inputs, delegate logic to `test_loop`.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1104\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_uses_dynamic_learning_phase\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36m_standardize_user_data\u001b[0;34m(self, x, y, sample_weight, class_weight, check_array_lengths, batch_size)\u001b[0m\n\u001b[1;32m    787\u001b[0m                 \u001b[0mfeed_output_shapes\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    788\u001b[0m                 \u001b[0mcheck_batch_axis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0;31m# Don't enforce the batch size.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 789\u001b[0;31m                 exception_prefix='target')\n\u001b[0m\u001b[1;32m    790\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    791\u001b[0m             \u001b[0;31m# Generate sample-wise weight values given the `sample_weight` and\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/engine/training_utils.py\u001b[0m in \u001b[0;36mstandardize_input_data\u001b[0;34m(data, names, shapes, check_batch_axis, exception_prefix)\u001b[0m\n\u001b[1;32m    136\u001b[0m                             \u001b[0;34m': expected '\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mnames\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m' to have shape '\u001b[0m \u001b[0;34m+\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    137\u001b[0m                             \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m' but got array with shape '\u001b[0m \u001b[0;34m+\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 138\u001b[0;31m                             str(data_shape))\n\u001b[0m\u001b[1;32m    139\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    140\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Error when checking target: expected dense_21 to have shape (10,) but got array with shape (1,)"]}]},{"metadata":{"id":"b_Ma5vsFLASv","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}